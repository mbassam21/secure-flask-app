name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-test:
    name: Build & Test Python
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover tests
        
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run CodeQL Security Scan
        uses: github/codeql-action/init@v3
        with:
          languages: 'python'

      - name: Perform Trivy Scan on Repository
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: 1

  build-push-docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: security-scan
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }} .
      
      - name: Run Trivy Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }}'
          format: 'table'
          exit-code: 1
          severity: 'CRITICAL,HIGH'

      - name: Push Docker Image
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:latest  
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }}  
      
      - name: Install Cosign
        run: |
            COSIGN_VERSION=$(curl -s https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r '.tag_name')
            curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
            chmod +x cosign-linux-amd64
            sudo mv cosign-linux-amd64 /usr/local/bin/cosign
            cosign version
  
      - name: Sign Image with Cosign (Keyless)
        env:
          COSIGN_EXPERIMENTAL: "true"  # Enables keyless signing
        run: |
          cosign sign --yes ${{ secrets.DOCKERHUB_USERNAME }}/flask:${{ github.sha }}



